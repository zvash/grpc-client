// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: rpc_list_active_sessions.proto

package authpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListActiveSessionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListActiveSessionsRequest) Reset() {
	*x = ListActiveSessionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_list_active_sessions_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListActiveSessionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActiveSessionsRequest) ProtoMessage() {}

func (x *ListActiveSessionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_list_active_sessions_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListActiveSessionsRequest.ProtoReflect.Descriptor instead.
func (*ListActiveSessionsRequest) Descriptor() ([]byte, []int) {
	return file_rpc_list_active_sessions_proto_rawDescGZIP(), []int{0}
}

type ActiveSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	ClientIp  string                 `protobuf:"bytes,2,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	UserAgent string                 `protobuf:"bytes,3,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
}

func (x *ActiveSession) Reset() {
	*x = ActiveSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_list_active_sessions_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveSession) ProtoMessage() {}

func (x *ActiveSession) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_list_active_sessions_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveSession.ProtoReflect.Descriptor instead.
func (*ActiveSession) Descriptor() ([]byte, []int) {
	return file_rpc_list_active_sessions_proto_rawDescGZIP(), []int{1}
}

func (x *ActiveSession) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ActiveSession) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *ActiveSession) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *ActiveSession) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

type ListActiveSessionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentSession *ActiveSession   `protobuf:"bytes,1,opt,name=current_session,json=currentSession,proto3" json:"current_session,omitempty"`
	OtherSessions  []*ActiveSession `protobuf:"bytes,2,rep,name=other_sessions,json=otherSessions,proto3" json:"other_sessions,omitempty"`
}

func (x *ListActiveSessionsResponse) Reset() {
	*x = ListActiveSessionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_list_active_sessions_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListActiveSessionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActiveSessionsResponse) ProtoMessage() {}

func (x *ListActiveSessionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_list_active_sessions_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListActiveSessionsResponse.ProtoReflect.Descriptor instead.
func (*ListActiveSessionsResponse) Descriptor() ([]byte, []int) {
	return file_rpc_list_active_sessions_proto_rawDescGZIP(), []int{2}
}

func (x *ListActiveSessionsResponse) GetCurrentSession() *ActiveSession {
	if x != nil {
		return x.CurrentSession
	}
	return nil
}

func (x *ListActiveSessionsResponse) GetOtherSessions() []*ActiveSession {
	if x != nil {
		return x.OtherSessions
	}
	return nil
}

var File_rpc_list_active_sessions_proto protoreflect.FileDescriptor

var file_rpc_list_active_sessions_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x72, 0x70, 0x63, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x06, 0x61, 0x75, 0x74, 0x68, 0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1b, 0x0a, 0x19, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa5, 0x01, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x22, 0x9a,
	0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a,
	0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x70, 0x62, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a,
	0x0e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x70, 0x62, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x2d, 0x5a, 0x2b, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x76, 0x61, 0x73, 0x68, 0x2f,
	0x62, 0x67, 0x6d, 0x6f, 0x6f, 0x64, 0x2d, 0x61, 0x75, 0x74, 0x68, 0x2d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_rpc_list_active_sessions_proto_rawDescOnce sync.Once
	file_rpc_list_active_sessions_proto_rawDescData = file_rpc_list_active_sessions_proto_rawDesc
)

func file_rpc_list_active_sessions_proto_rawDescGZIP() []byte {
	file_rpc_list_active_sessions_proto_rawDescOnce.Do(func() {
		file_rpc_list_active_sessions_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_list_active_sessions_proto_rawDescData)
	})
	return file_rpc_list_active_sessions_proto_rawDescData
}

var file_rpc_list_active_sessions_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_rpc_list_active_sessions_proto_goTypes = []interface{}{
	(*ListActiveSessionsRequest)(nil),  // 0: authpb.ListActiveSessionsRequest
	(*ActiveSession)(nil),              // 1: authpb.ActiveSession
	(*ListActiveSessionsResponse)(nil), // 2: authpb.ListActiveSessionsResponse
	(*timestamppb.Timestamp)(nil),      // 3: google.protobuf.Timestamp
}
var file_rpc_list_active_sessions_proto_depIdxs = []int32{
	3, // 0: authpb.ActiveSession.expires_at:type_name -> google.protobuf.Timestamp
	1, // 1: authpb.ListActiveSessionsResponse.current_session:type_name -> authpb.ActiveSession
	1, // 2: authpb.ListActiveSessionsResponse.other_sessions:type_name -> authpb.ActiveSession
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_rpc_list_active_sessions_proto_init() }
func file_rpc_list_active_sessions_proto_init() {
	if File_rpc_list_active_sessions_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_list_active_sessions_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListActiveSessionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_list_active_sessions_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_list_active_sessions_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListActiveSessionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_list_active_sessions_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rpc_list_active_sessions_proto_goTypes,
		DependencyIndexes: file_rpc_list_active_sessions_proto_depIdxs,
		MessageInfos:      file_rpc_list_active_sessions_proto_msgTypes,
	}.Build()
	File_rpc_list_active_sessions_proto = out.File
	file_rpc_list_active_sessions_proto_rawDesc = nil
	file_rpc_list_active_sessions_proto_goTypes = nil
	file_rpc_list_active_sessions_proto_depIdxs = nil
}
