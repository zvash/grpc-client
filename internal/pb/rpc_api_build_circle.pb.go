// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: rpc_api_build_circle.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CircleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	CircleType  string `protobuf:"bytes,3,opt,name=circle_type,json=circleType,proto3" json:"circle_type,omitempty"`
	IsPrivate   bool   `protobuf:"varint,4,opt,name=is_private,json=isPrivate,proto3" json:"is_private,omitempty"`
	ImageExt    string `protobuf:"bytes,5,opt,name=image_ext,json=imageExt,proto3" json:"image_ext,omitempty"`
}

func (x *CircleInfo) Reset() {
	*x = CircleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_api_build_circle_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CircleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CircleInfo) ProtoMessage() {}

func (x *CircleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_api_build_circle_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CircleInfo.ProtoReflect.Descriptor instead.
func (*CircleInfo) Descriptor() ([]byte, []int) {
	return file_rpc_api_build_circle_proto_rawDescGZIP(), []int{0}
}

func (x *CircleInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CircleInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CircleInfo) GetCircleType() string {
	if x != nil {
		return x.CircleType
	}
	return ""
}

func (x *CircleInfo) GetIsPrivate() bool {
	if x != nil {
		return x.IsPrivate
	}
	return false
}

func (x *CircleInfo) GetImageExt() string {
	if x != nil {
		return x.ImageExt
	}
	return ""
}

type BuildCircleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*BuildCircleRequest_Info
	//	*BuildCircleRequest_ChunkData
	Data isBuildCircleRequest_Data `protobuf_oneof:"data"`
}

func (x *BuildCircleRequest) Reset() {
	*x = BuildCircleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_api_build_circle_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildCircleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildCircleRequest) ProtoMessage() {}

func (x *BuildCircleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_api_build_circle_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildCircleRequest.ProtoReflect.Descriptor instead.
func (*BuildCircleRequest) Descriptor() ([]byte, []int) {
	return file_rpc_api_build_circle_proto_rawDescGZIP(), []int{1}
}

func (m *BuildCircleRequest) GetData() isBuildCircleRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *BuildCircleRequest) GetInfo() *CircleInfo {
	if x, ok := x.GetData().(*BuildCircleRequest_Info); ok {
		return x.Info
	}
	return nil
}

func (x *BuildCircleRequest) GetChunkData() []byte {
	if x, ok := x.GetData().(*BuildCircleRequest_ChunkData); ok {
		return x.ChunkData
	}
	return nil
}

type isBuildCircleRequest_Data interface {
	isBuildCircleRequest_Data()
}

type BuildCircleRequest_Info struct {
	Info *CircleInfo `protobuf:"bytes,1,opt,name=info,proto3,oneof"`
}

type BuildCircleRequest_ChunkData struct {
	ChunkData []byte `protobuf:"bytes,2,opt,name=chunk_data,json=chunkData,proto3,oneof"`
}

func (*BuildCircleRequest_Info) isBuildCircleRequest_Data() {}

func (*BuildCircleRequest_ChunkData) isBuildCircleRequest_Data() {}

type BuildCircleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Circle *Circle `protobuf:"bytes,1,opt,name=circle,proto3" json:"circle,omitempty"`
}

func (x *BuildCircleResponse) Reset() {
	*x = BuildCircleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_api_build_circle_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildCircleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildCircleResponse) ProtoMessage() {}

func (x *BuildCircleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_api_build_circle_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildCircleResponse.ProtoReflect.Descriptor instead.
func (*BuildCircleResponse) Descriptor() ([]byte, []int) {
	return file_rpc_api_build_circle_proto_rawDescGZIP(), []int{2}
}

func (x *BuildCircleResponse) GetCircle() *Circle {
	if x != nil {
		return x.Circle
	}
	return nil
}

var File_rpc_api_build_circle_proto protoreflect.FileDescriptor

var file_rpc_api_build_circle_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x72, 0x70, 0x63, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f,
	0x63, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62,
	0x1a, 0x10, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xa1, 0x01, 0x0a, 0x0a, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x69, 0x72,
	0x63, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x45, 0x78, 0x74, 0x22, 0x63, 0x0a, 0x12, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x43,
	0x69, 0x72, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x44,
	0x61, 0x74, 0x61, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x39, 0x0a, 0x13, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x63, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x52, 0x06,
	0x63, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x76, 0x61, 0x73, 0x68, 0x2f, 0x62, 0x67, 0x6d, 0x6f, 0x6f,
	0x64, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_api_build_circle_proto_rawDescOnce sync.Once
	file_rpc_api_build_circle_proto_rawDescData = file_rpc_api_build_circle_proto_rawDesc
)

func file_rpc_api_build_circle_proto_rawDescGZIP() []byte {
	file_rpc_api_build_circle_proto_rawDescOnce.Do(func() {
		file_rpc_api_build_circle_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_api_build_circle_proto_rawDescData)
	})
	return file_rpc_api_build_circle_proto_rawDescData
}

var file_rpc_api_build_circle_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_rpc_api_build_circle_proto_goTypes = []interface{}{
	(*CircleInfo)(nil),          // 0: pb.CircleInfo
	(*BuildCircleRequest)(nil),  // 1: pb.BuildCircleRequest
	(*BuildCircleResponse)(nil), // 2: pb.BuildCircleResponse
	(*Circle)(nil),              // 3: pb.Circle
}
var file_rpc_api_build_circle_proto_depIdxs = []int32{
	0, // 0: pb.BuildCircleRequest.info:type_name -> pb.CircleInfo
	3, // 1: pb.BuildCircleResponse.circle:type_name -> pb.Circle
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_rpc_api_build_circle_proto_init() }
func file_rpc_api_build_circle_proto_init() {
	if File_rpc_api_build_circle_proto != nil {
		return
	}
	file_api_circle_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_rpc_api_build_circle_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CircleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_api_build_circle_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildCircleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_api_build_circle_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildCircleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_rpc_api_build_circle_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*BuildCircleRequest_Info)(nil),
		(*BuildCircleRequest_ChunkData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_api_build_circle_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rpc_api_build_circle_proto_goTypes,
		DependencyIndexes: file_rpc_api_build_circle_proto_depIdxs,
		MessageInfos:      file_rpc_api_build_circle_proto_msgTypes,
	}.Build()
	File_rpc_api_build_circle_proto = out.File
	file_rpc_api_build_circle_proto_rawDesc = nil
	file_rpc_api_build_circle_proto_goTypes = nil
	file_rpc_api_build_circle_proto_depIdxs = nil
}
